# Creates the table (used during initialization)
createTable=CREATE TABLE package_cache (\
	group_id VARCHAR(255) NOT NULL, \
	name VARCHAR(255) NOT NULL, \
	version VARCHAR(255) NOT NULL, \
    repository VARCHAR(255) NOT NULL, \
	path VARCHAR(2056) NOT NULL, \
    url VARCHAR(2056), \
    slot VARCHAR(16) NOT NULL, \
	PRIMARY KEY (group_id, name, version, type, repository))
	
# Inserts a record into the table
insert=INSERT INTO package_cache VALUES(?, ?, ?, ?, ?, ?, ?)


# Inserts a record into the table
count=SELECT count(*) from package_cache

# Queries a record by (package) name
queryAll=SELECT * FROM package_cache ORDER BY group_id, name, version, repository

# Queries a record by (package) name
queryByName=SELECT * FROM package_cache WHERE name = ? ORDER BY group_id, name, \
	version, type, repository

# Queries a record by (package) name
queryByNameOrSimilar=SELECT * FROM package_cache WHERE name like '%' || ? || '%' ORDER BY group_id, name, \
	version, repository

# Queries a record by (package) name
queryByNameAndGroup=SELECT * FROM package_cache WHERE name = ? AND group_id = ? ORDER BY group_id, name, \
	version, repository

# Queries a record by (package) name
queryByNameAndGroupAndVersion=SELECT * FROM package_cache WHERE name = ? AND group_id = ? \
   AND version = ? ORDER BY group_id, name, version, repository


# Queries a record by (package) name
queryByNameAndVersion=SELECT * FROM package_cache WHERE name = ? AND version = ? ORDER BY group_id, name, \
	version, type, repository
	
# Deletes the record by primary keys
deleteByKeys=DELETE FROM package_cache WHERE group_id = ? AND name = ? \
	AND version = ? AND repository = ?

# Delete all records from a repository
deleteByRepository=DELETE FROM package_cache WHERE repository = ?


# Delete all records from a repository
deleteAll=DELETE FROM package_cache
	
updateVersion=UPDATE package_cache SET version = ? WHERE group_id = ? AND name = ? \
	AND version = ? AND repository = ?

	
	
